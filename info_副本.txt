
可以将xcheck.user表也变成ID自增
1. create sequence xcheck.generator_user_id increment by 1 minvalue 1 no maxvalue start with 590000;
2. nextval('xcheck.generator_user_id'::regclass) 修改ID后面的default

ALTER TABLE user
ALTER COLUMN user_id SET DEFAULT nextval('xcheck.generator_user_id');

ALTER TABLE xcheck."user"
ADD COLUMN "staffid" integer;
ADD COLUMN "team_ids" INTEGER[];
ADD COLUMN "avatarUrl" character(300);


create sequence xcheck.generator_team_id increment by 1 minvalue 1 no maxvalue start with 5000;

CREATE TABLE IF NOT EXISTS xcheck.team
(
    team_id integer NOT NULL DEFAULT nextval('xcheck.generator_team_id'::regclass),
    name character(200),
    "group_ids" INTEGER[],
    PRIMARY KEY (team_id)
)

CREATE TABLE IF NOT EXISTS xcheck.role
(
    role_id integer NOT NULL,
    name character(200),
    PRIMARY KEY (role_id)
)


CREATE TABLE IF NOT EXISTS xcheck.group
(
    group_id integer NOT NULL,
    name character(200),
    role_ids INTEGER[],
    PRIMARY KEY (group_id)
)


INSERT INTO xcheck.group (group_id, name, role_ids) VALUES
(1000, 'admin', '{100}'),
(1001, 'guest', '{101}'),
(1002, 'data_test', '{102,103}'),
(1003, 'AP_test', '{104,105}'),
(1004, 'web_test', '{106,107}'),
(1005, 'DELOS_test', '{105}');


INSERT INTO xcheck.role (role_id, name) VALUES
(100, 'admin'),
(101, 'guest'),
(102, 'data_engineer'),
(103, 'data_operator'),
(104, 'API_engineer'),
(105, 'API_operator'),
(106, 'web_engineer'),
(107, 'web_operator');

UPDATE xcheck.group
SET name = 'AdminGroup'
WHERE group_id = 1000;

UPDATE xcheck.group
SET name = 'Guest'
WHERE group_id = 1001;

UPDATE xcheck.group
SET name = 'DataTestGroup'
WHERE group_id = 1002;

UPDATE xcheck.group
SET name = 'APITestGroup'
WHERE group_id = 1003;

UPDATE xcheck.group
SET name = 'WebTestGroup'
WHERE group_id = 1004;

UPDATE xcheck.group
SET name = 'DelosTestGroup'
WHERE group_id = 1005;



def set_avatar(self, url):
    avatar_query = """UPDATE xcheck.user
                      SET avatar_url = '{}'
                      WHERE username = '{}'""".format(url, self.username)
    self.cursor.execute(avatar_query)


def generate_avatar_url(number):
    base_url = "https://aimei.cn/{}/{:d}.jpg"
    prefix = str(number)[:4]
    url = base_url.format(prefix, number)
    return url

# 生成 URL
number = 45178280
url = generate_avatar_url(number)









